swagger: '2.0'
info:
  title: ViCE Image Registry
  description: "API endpoint of the ViCE Image Registry: search, deploy, and import virtual environments from supported execution environments like OpenStack, Docker, or bwLehrpool."
  version: "0.1"
  contact:
    name: christopher.hauser@uni-ulm.de
host: localhost:8080
schemes:
  - http
basePath: /v1
produces:
  - application/json
paths:
  /environments:
    get:
      summary: List by user accessible execution environments
      operationId: findEnvironment
      parameters:
        - name: filterManagementlayer
          in: query
          required: false
          type: string
        - name: filterRuntimetechnology
          in: query
          required: false
          type: string
      responses:
        200:
          description: An array of accessible execution environments.
          schema:
            type: array
            items:
              $ref: '#/definitions/Environment'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        401:
          $ref: "#/responses/UnauthorizedError"            
      security:
        - vice_auth: []
          
    post:
      summary: Create a new execution environment for authenticated user
      operationId: createEnvironment
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: "#/definitions/Environment"
      consumes:
        - application/json
        - application/xml
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Environment"      
        405:
          description: Invalid input
        401:
          $ref: "#/responses/UnauthorizedError"          
      security:
        - vice_auth: []

    put:
      summary: Update an existing execution environment
      operationId: updateEnvironment
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: "#/definitions/Environment"
      consumes:
        - application/json
        - application/xml
      responses:
        405:
          description: Validation exception
        404:
          description: Environment not found
        400:
          description: Invalid ID supplied
        401:
          $ref: "#/responses/UnauthorizedError"          
      security:
        - vice_auth: []    
          
  /environment/{environmentId}:
    get:
      summary: Get execution environment by id
      operationId: getEnvironment
      parameters:
        - in: path
          name: environmentId
          required: true
          type: string
      responses:
        404:
          description: Environment not found
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/Environment"
        400:
          description: Invalid ID supplied
        401:
          $ref: "#/responses/UnauthorizedError"          
      security:
        - vice_auth: []    

    delete:
      summary: Deletes an execution environment
      description: ""
      operationId: deleteEnvironment
      parameters:
        - in: path
          name: environmentId
          required: true
          type: string
      responses:
        200:
          description: successful operation      
        400:
          description: Invalid ID supplied
        401:
          $ref: "#/responses/UnauthorizedError"
      security:
        - vice_auth: []

  /images:
    get:
      summary: List available images
      operationId: findImages
      responses:
        200:
          description: An array of images.
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: Create a new image
      operationId: createImage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Image"
      consumes:
        - application/json
        - application/xml
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Image"      
        405:
          description: Invalid input
        401:
          $ref: "#/responses/UnauthorizedError"          
      security:
        - vice_auth: []
        
  /image/{imageId}:
    get:
      summary: Get an image by id
      operationId: getImage
      parameters:
        - in: path
          name: imageId
          required: true
          type: string
      responses:
        404:
          description: Image not found
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/Image"
        400:
          description: Invalid ID supplied
        401:
          $ref: "#/responses/UnauthorizedError"          
      security:
        - vice_auth: []    
        
    delete:
      summary: Deletes an image
      description: ""
      operationId: deleteImage
      parameters:
        - in: path
          name: imageId
          required: true
          type: string
      responses:
        200:
          description: successful operation      
        400:
          description: Invalid ID supplied
        401:
          $ref: "#/responses/UnauthorizedError"
      security:
        - vice_auth: []

securityDefinitions:
  vice_auth:
    type: basic

definitions:
  Environment:
    properties:
      id:
        type: string    
      userid:
        type: string
      credentials:
        $ref: "#/definitions/Credentials"
      runtimetechnology:
        $ref: "#/definitions/RuntimeTechnology"
      managementlayer:
        $ref: "#/definitions/ManagementLayer"
  Credentials:
    type: object
    properties:
      endpoint:
        type: string
      username:
        type: string
      password:
        type: string
  RuntimeTechnology:
    type: object
    properties:
      type:
        type: string
        enum: [virtualmachine, container, application]
      software:
        type: string
      version:
        type: string
  ManagementLayer:
    type: object
    properties:
      type:
        type: string
        enum: [basic, cloudcomputing, containercluster, jobscheduler]
      software:
        type: string
      version:
        type: string

  User:
    properties:
      id:
        type: string    
      username:
        type: string
      password:
        type: string

  Image:
    type: object
    properties:
      id:
        type: string
      userid:
        type: string
      image-type:
        type: string
        enum: [implicit, declarative]
      content-type:
        type: string
        enum: [disk-raw, disk-qcow2, disk-vmdk, docker-file, docker-image, packerfile]
      originEnvironment:
        $ref: "#/definitions/Environment"

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string