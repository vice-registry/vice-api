// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UploadImageOKCode is the HTTP code returned for type UploadImageOK
const UploadImageOKCode int = 200

/*UploadImageOK successful operation

swagger:response uploadImageOK
*/
type UploadImageOK struct {
}

// NewUploadImageOK creates UploadImageOK with default headers values
func NewUploadImageOK() *UploadImageOK {
	return &UploadImageOK{}
}

// WriteResponse to the client
func (o *UploadImageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
}

// UploadImageBadRequestCode is the HTTP code returned for type UploadImageBadRequest
const UploadImageBadRequestCode int = 400

/*UploadImageBadRequest Bad request

swagger:response uploadImageBadRequest
*/
type UploadImageBadRequest struct {
}

// NewUploadImageBadRequest creates UploadImageBadRequest with default headers values
func NewUploadImageBadRequest() *UploadImageBadRequest {
	return &UploadImageBadRequest{}
}

// WriteResponse to the client
func (o *UploadImageBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
}

// UploadImageUnauthorizedCode is the HTTP code returned for type UploadImageUnauthorized
const UploadImageUnauthorizedCode int = 401

/*UploadImageUnauthorized Authentication information is missing or invalid

swagger:response uploadImageUnauthorized
*/
type UploadImageUnauthorized struct {
	/*
	  Required: true
	*/
	WWWAuthenticate string `json:"WWW_Authenticate"`
}

// NewUploadImageUnauthorized creates UploadImageUnauthorized with default headers values
func NewUploadImageUnauthorized() *UploadImageUnauthorized {
	return &UploadImageUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the upload image unauthorized response
func (o *UploadImageUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *UploadImageUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the upload image unauthorized response
func (o *UploadImageUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WriteResponse to the client
func (o *UploadImageUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.WriteHeader(401)
}

// UploadImageNotFoundCode is the HTTP code returned for type UploadImageNotFound
const UploadImageNotFoundCode int = 404

/*UploadImageNotFound Element not found

swagger:response uploadImageNotFound
*/
type UploadImageNotFound struct {
}

// NewUploadImageNotFound creates UploadImageNotFound with default headers values
func NewUploadImageNotFound() *UploadImageNotFound {
	return &UploadImageNotFound{}
}

// WriteResponse to the client
func (o *UploadImageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

// UploadImageInternalServerErrorCode is the HTTP code returned for type UploadImageInternalServerError
const UploadImageInternalServerErrorCode int = 500

/*UploadImageInternalServerError Internal Server Error

swagger:response uploadImageInternalServerError
*/
type UploadImageInternalServerError struct {
}

// NewUploadImageInternalServerError creates UploadImageInternalServerError with default headers values
func NewUploadImageInternalServerError() *UploadImageInternalServerError {
	return &UploadImageInternalServerError{}
}

// WriteResponse to the client
func (o *UploadImageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
}
