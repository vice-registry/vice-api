package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"omi-gitlab.e-technik.uni-ulm.de/vice/vice-api/models"
)

// FindExecutionEnvironmentOKCode is the HTTP code returned for type FindExecutionEnvironmentOK
const FindExecutionEnvironmentOKCode int = 200

/*FindExecutionEnvironmentOK An array of accessible execution environments.

swagger:response findExecutionEnvironmentOK
*/
type FindExecutionEnvironmentOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ExecutionEnvironment `json:"body,omitempty"`
}

// NewFindExecutionEnvironmentOK creates FindExecutionEnvironmentOK with default headers values
func NewFindExecutionEnvironmentOK() *FindExecutionEnvironmentOK {
	return &FindExecutionEnvironmentOK{}
}

// WithPayload adds the payload to the find execution environment o k response
func (o *FindExecutionEnvironmentOK) WithPayload(payload []*models.ExecutionEnvironment) *FindExecutionEnvironmentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find execution environment o k response
func (o *FindExecutionEnvironmentOK) SetPayload(payload []*models.ExecutionEnvironment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindExecutionEnvironmentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.ExecutionEnvironment, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*FindExecutionEnvironmentDefault Unexpected error

swagger:response findExecutionEnvironmentDefault
*/
type FindExecutionEnvironmentDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindExecutionEnvironmentDefault creates FindExecutionEnvironmentDefault with default headers values
func NewFindExecutionEnvironmentDefault(code int) *FindExecutionEnvironmentDefault {
	if code <= 0 {
		code = 500
	}

	return &FindExecutionEnvironmentDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find execution environment default response
func (o *FindExecutionEnvironmentDefault) WithStatusCode(code int) *FindExecutionEnvironmentDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find execution environment default response
func (o *FindExecutionEnvironmentDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find execution environment default response
func (o *FindExecutionEnvironmentDefault) WithPayload(payload *models.Error) *FindExecutionEnvironmentDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find execution environment default response
func (o *FindExecutionEnvironmentDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindExecutionEnvironmentDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
